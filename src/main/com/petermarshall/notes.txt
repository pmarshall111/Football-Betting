get our features and go from there

previous form, lineup, weaknesses against other teams strengths, last 2 times against same team

- expected goals for and against. looks at last 5 games. also looks at form of those opponents at the time of the game. gives less credence to games further away.

- could also look at win rate with each player in there. if each player played last 5 games, no point. but if
a key player is injured, we may deduct points. or potentially whoscored ratings. possibly best to do this when
we look at the starting lineup 1hour before the game.

- whoscored weaknesses.

-team results

Get all the data first with scraping. Store in db? Then we can run it again and again on 3 match weeks so it
can learn. How to learn? I put in a starting point in terms of base multipliers and then we mutate from there, choosing the most successful numbers for the next iteration. Keep on going until we're fairly reliably picking whether to bet or not on a game.



https://www.oddsportal.com/soccer/england/premier-league/results/

historical betting odds



_____


have a potential problem with whoscored right now in that we need to go on their website to get cookies before they let us access some pages.
Also it seems that we are not correctly writing the dates into our matches object. We get null instead of a date passed in. Perhaps this is due to a ParseException within the DateHelper?



Looks like we can only get detailed player data from this season. We are able to get overall average player ratings over the whole season, but not how it changes for each game and how
it affects the form.

We would also be unable to get historical strengths and weaknesses of each team.

I think right now the best we can do is xG history for each game and average player rating over the season.


_______


SO FAR (before Liverpool trip):

Have all data in database (BEWARE 1 game has no data. france 16-17 Bastia vs Lyon
Have a method to get data from database back into Java.

NEXT:

Create training data and store in it's own place
Add a scraper to scrape data before a game with lineups and then also one to scrape at the end of the day. (Should look in db to check if anything needs scraping)




Tomorrow
//TODO: Create a comma separated file so we can use it in Octave.
//TODO: In Octave, create logistic regression for win/not win, loss/not loss, draw, not draw, so we can calculate the probability of each happening for our training set.
//TODO: Get accuracy of regression for data in training set.

//if i complete the above that will be a success in itself for tomorrow.
//after that:
//TODO: Create a lineup scraper that will scrape the lineups for a game. Ensure it doesn't have within it the timer functionality to scrape 1 hour before the game.
//TODO: We want it to pretty much just take a gameID, so we can call it to test our logistic regression.

//TODO: Using scraped lineups, build up some matches with data that we can test in Octave and see how well it does for problems not in the training set.